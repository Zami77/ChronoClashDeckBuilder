@model ChronoClashDeckBuilder.Models.ViewModels.DeckBuilderListViewModel
@inject SignInManager<IdentityUser> signInManager;

@{
    ViewData["Title"] = "Deck Builder";
}

<div class="text-center">
    <h1>Deck Builder!</h1>
    <p>
        Please select a card to add it your deck.
    </p>
</div>
<div class="row" >
    <div class="col-8">

        <form asp-action="Index" method="get">
            <div class="form-actions justify-content-center">
                @*<div class="row" >
            <div class="col-xs-3" >
                <input  type="text"  placeholder="Enter Card Name" name="cardName" value="@ViewData["CardNameFilter"]" />
            </div>
            <div class="col-xs-3 mr-2">
                <input type="text"  placeholder="Enter Card Ability" name="cardAbility" value="@ViewData["CardAbilityFilter"]" />
            </div>
            <div class="btn-group btn-group-toggle btn  col-xs-3" data-toggle="buttons">

                <label class="btn btn-secondary w-100">
                    <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Blue" /> Blue
                </label>

                <label class="btn btn-secondary w-100">
                    <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Green" /> Green
                </label>

                <label class="btn btn-secondary w-100">
                    <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Red" /> Red
                </label>

                <label class="btn btn-secondary w-100">
                    <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Purple" /> Purple
                </label>


            </div>
        </div>*@
                <input type="text" placeholder="Enter Card Name" name="cardName" value="@ViewData["CardNameFilter"]" />
                <input type="text" placeholder="Enter Card Ability" name="cardAbility" value="@ViewData["CardAbilityFilter"]" />
                <div class="btn-group btn-group-toggle just" data-toggle="buttons">

                    <label class="btn btn-secondary w-100">
                        <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Blue" /> Blue
                    </label>

                    <label class="btn btn-secondary w-100">
                        <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Green" /> Green
                    </label>

                    <label class="btn btn-secondary w-100">
                        <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Red" /> Red
                    </label>

                    <label class="btn btn-secondary w-100">
                        <input type="radio" name="cardColor" id="optionBlue" autocomplete="off" value="Purple" /> Purple
                    </label>
                </div>
                
                <div class="row">
                    <span id="dropdownPadding" class="mr-3"></span>
                    <select name="cardSet" id="cardSet" class="form-control mr-1" style="width:auto">
                        <option name="cardSet" value="" selected>All Sets</option>
                        <optgroup label="Official Sets">
                            <option name="cardSet" value="NB">Naruto</option>
                            <option name="cardSet" value="GZ">Godzilla</option>
                            <option name="cardSet" value="EV">Evangelion</option>
                        </optgroup>
                        <optgroup label="Fan Sets">
                        </optgroup>
                    </select>


                    <input type="submit" value="Search" class="btn btn-primary mr-1" />
                    <a asp-action="Index" class="btn  btn-warning mr-1">Reset Filters</a>
                </div>

            </div>
        </form>

        <form asp-action="Index" method="post">
            <div class="row">
                @foreach (var item in Model.Cards)
                {
                    <input type="image" src="https://chronocardimages.blob.core.windows.net/chronocardimages/@item.CardImage"
                           alt="@item.CardName"
                           style="width:24%;height:24%;"
                           asp-action="AddToDeck" asp-route-cardNumber="@item.CardNumber"
                           asp-route-cardColor="@ViewData["CardColorFilter"]" asp-route-cardName="@ViewData["CardNameFilter"]"
                           asp-route-cardAbility="@ViewData["CardAbilityFilter"]" asp-route-deckName="@ViewData["DeckName"]"
                           asp-route-cardSet="@ViewData["CardSetFilter"]" asp-route-pageNumber="@Model.Cards.PageIndex" />

                }

            </div>
        </form>
        @{
            var prevDisabled = !Model.Cards.HasPreviousPage ? "disabled" : "";
            var nextDisabled = !Model.Cards.HasNextPage ? "disabled" : "";
        }

        <footer>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.Cards.PageIndex - 1)"
               asp-route-cardName="@ViewData["CardNameFilter"]"
               asp-route-cardAbility="@ViewData["CardAbilityFilter"]"
               asp-route-cardColor="@ViewData["CardColorFilter"]"
               asp-route-cardSet="@ViewData["CardSetFilter"]"
               asp-route-deckName="@ViewData["DeckName"]"
               class="btn btn-default @prevDisabled">
                Previous
            </a>
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.Cards.PageIndex + 1)"
               asp-route-cardName="@ViewData["CardNameFilter"]"
               asp-route-cardAbility="@ViewData["CardAbilityFilter"]"
               asp-route-cardColor="@ViewData["CardColorFilter"]"
               asp-route-cardSet="@ViewData["CardSetFilter"]"
               asp-route-deckName="@ViewData["DeckName"]"
               class="btn btn-default @nextDisabled">
                Next
            </a>
        </footer>
    </div>

    @*Cards currently in deck*@
    <div class="col-4">

        @if (signInManager.IsSignedIn(User))
        {
            <form asp-action="SaveDeck">
                <input type="submit" value="Save Deck" id="DeckName" name="DeckName" class="btn btn-primary" onclick="enterDeckName()" />
                <script>
                    function enterDeckName() {
                        var deckName = prompt("Please enter your deck name:", "");
                        document.getElementById("DeckName").value = deckName;
                    }
                </script>
            </form>
        }
        else
        {
            <p>Sign-in in to save deck!</p>
        }
        <a type="button" class="btn btn-primary" asp-action="ResetDeck">Reset Deck</a>

        @*List of Main Deck cards*@

        <table class="table">
            <h3>Deck: @Model.NewDeck.DeckCount() Cards</h3>
            <thead>
                <tr>
                    <th>Card</th>
                    <th>Qty</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var card in Model.NewDeck.Lines.OrderBy(c => c.Card.CardName).OrderBy(c => c.Card.CardColor))
                {

                    @if (card.Card.CardType == "Battler" || card.Card.CardType == "Action")
                    {

                        <tr>

                            <td class="text-left" id="@card.Card.CardNumber" onmouseover="showCard('@card.Card.CardNumber')" onmouseout="hideCard('@card.Card.CardNumber')"
                                @if (card.Card.CardColor == "Red") { @: style="background-color: rgba(255, 0, 0, 0.2);"
                                }
                                @if (card.Card.CardColor == "Green") { @: style="background-color: rgba(0, 255, 0, 0.2);"
                                }
                                @if (card.Card.CardColor == "Blue") { @: style="background-color: rgba(0, 0, 255, 0.2);"
                                }
                                @if (card.Card.CardColor == "Purple") { @: style="background-color: rgba(148, 0, 211, 0.2);"
                                }>
                                @card.Card.CardName
                            </td>


                            <td class="text-left">
                                @card.Quantity
                            </td>
                            <td>
                                <a class="btn btn-sm btn-danger" asp-action="RemoveFromDeck" asp-route-cardNumber="@card.Card.CardNumber" asp-route-pageNumber="@Model.Cards.PageIndex"
                                   asp-route-cardColor="@ViewData["CardColorFilter"]" asp-route-cardName="@ViewData["CardNameFilter"]" asp-route-cardAbility="@ViewData["CardAbilityFilter"]">Remove</a>
                                <a class="btn btn-sm btn-success" asp-action="AddToDeck" asp-route-cardNumber="@card.Card.CardNumber" asp-route-pageNumber="@Model.Cards.PageIndex"
                                   asp-route-cardColor="@ViewData["CardColorFilter"]" asp-route-cardName="@ViewData["CardNameFilter"]" asp-route-cardAbility="@ViewData["CardAbilityFilter"]">
                                    Add
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @*List of Extra Deck Cards*@
        <table class="table">
            <h3>Extra Deck: @Model.NewDeck.ExtraDeckCount() Cards</h3>
            <thead>
                <tr>
                    <th>Card</th>
                    <th>Qty</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>

                @foreach (var card in Model.NewDeck.Lines.OrderBy(c => c.Card.CardName).OrderBy(c => c.Card.CardColor))
                {
                    @if (card.Card.CardType == "Extra Battler" || card.Card.CardType == "Extra Action")
                    {
                        <tr>
                            <td class="text-left" id="@card.Card.CardNumber" onmouseover="showCard('@card.Card.CardNumber')" onmouseout="hideCard('@card.Card.CardNumber')"
                                @if (card.Card.CardColor == "Red") { @: style="background-color: rgba(255, 0, 0, 0.2);"
                                }
                                @if (card.Card.CardColor == "Green") { @: style="background-color: rgba(0, 255, 0, 0.2);"
                                }
                                @if (card.Card.CardColor == "Blue") { @: style="background-color: rgba(0, 0, 255, 0.2);"
                                }
                                @if (card.Card.CardColor == "Purple") { @: style="background-color: rgba(148, 0, 211, 0.2);"
                                }>
                                @card.Card.CardName
                            </td>

                            <td class="text-left">
                                @card.Quantity
                            </td>
                            <td>
                                <a class="btn btn-sm btn-danger" asp-action="RemoveFromDeck" asp-route-cardNumber="@card.Card.CardNumber" asp-route-pageNumber="@Model.Cards.PageIndex"
                                   asp-route-cardColor="@ViewData["CardColorFilter"]" asp-route-cardName="@ViewData["CardNameFilter"]" asp-route-cardAbility="@ViewData["CardAbilityFilter"]">Remove</a>
                                <a class="btn btn-sm btn-success" asp-action="AddToDeck" asp-route-cardNumber="@card.Card.CardNumber" asp-route-pageNumber="@Model.Cards.PageIndex"
                                   asp-route-cardColor="@ViewData["CardColorFilter"]" asp-route-cardName="@ViewData["CardNameFilter"]" asp-route-cardAbility="@ViewData["CardAbilityFilter"]">
                                    Add
                                </a>
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
        @*}*@
    </div>
</div>

<script>
    var msg = '@TempData["message"]';
    if (msg.length) {
        alert(msg);
    }
</script>
<script>
    function showCard(cardNum) {
        console.log("showCard() function:" + cardNum);
        let elem = document.getElementById(cardNum);
        let elemRect = elem.getBoundingClientRect();
        var cardImage = new Image();
        cardImage.src = 'https://chronocardimages.blob.core.windows.net/chronocardimages/' + cardNum + '.jpg';
        cardImage.style.width = '50%';
        cardImage.style.position = "absolute";
        cardImage.style.zIndex = "1";
        cardImage.style.left = (elemRect.left / 10) + 'px';
        elem.appendChild(cardImage);
    }
    function hideCard(cardNum) {
        console.log("hideCard()");
        let element = document.getElementById(cardNum);
        while (element.childElementCount > 0) {
            element.removeChild(element.lastChild);
        }
    }
</script>
<script>
    function getWidth() {
        return Math.max(
            document.body.scrollWidth,
            document.documentElement.scrollWidth,
            document.body.offsetWidth,
            document.documentElement.offsetWidth,
            document.documentElement.clientWidth
        );
    }

    function getHeight() {
        return Math.max(
            document.body.scrollHeight,
            document.documentElement.scrollHeight,
            document.body.offsetHeight,
            document.documentElement.offsetHeight,
            document.documentElement.clientHeight
        );
    }
</script>




